// Generated by CoffeeScript 1.3.3
(function() {
  var Duration;

  Duration = (function() {

    Duration.prototype.MS_IN_YEAR = 31536000000;

    Duration.prototype.MS_IN_MONTH = 2592000000;

    Duration.prototype.MS_IN_WEEK = 604800000;

    Duration.prototype.MS_IN_DAY = 86400000;

    Duration.prototype.MS_IN_HOUR = 3600000;

    Duration.prototype.MS_IN_MINUTE = 60000;

    Duration.prototype.num = null;

    Duration.prototype.unit = null;

    function Duration(num, unit) {
      this.num = num;
      this.unit = unit;
    }

    Duration.prototype.milliseconds = function() {
      return this["MS_IN_" + (this.unit.toUpperCase())] * this.num;
    };

    Duration.prototype.seconds = function() {
      return this.milliseconds() / 1000.0;
    };

    Duration.prototype.minutes = function() {
      if (this.unit === "minute") {
        return this.num;
      }
      return this.seconds() / 60.0;
    };

    Duration.prototype.hours = function() {
      if (this.unit === "hour") {
        return this.num;
      }
      return this.minutes() / 60.0;
    };

    Duration.prototype.days = function() {
      if (this.unit === "day") {
        return this.num;
      }
      return this.hours() / 24.0;
    };

    Duration.prototype.weeks = function() {
      if (this.unit === "week") {
        return this.num;
      }
      return this.days() / 7.0;
    };

    Duration.prototype.months = function() {
      if (this.unit === "month") {
        return this.num;
      }
      return this.days() / 30.0;
    };

    Duration.prototype.years = function() {
      if (this.unit === "year") {
        return this.num;
      }
      return this.days() / 365.0;
    };

    Duration.prototype.ago = function() {
      return this["" + this.unit + "sBefore"](new Date);
    };

    Duration.prototype.before = function(date) {
      return this["" + this.unit + "sBefore"](date);
    };

    Duration.prototype.simpleBefore = function(date) {
      var ms;
      ms = date.getTime() - this.milliseconds();
      date = new Date;
      date.setTime(ms);
      return date;
    };

    Duration.prototype.minutesBefore = function(date) {
      return this.simpleBefore(date);
    };

    Duration.prototype.hoursBefore = function(date) {
      return this.simpleBefore(date);
    };

    Duration.prototype.daysBefore = function(date) {
      return this.simpleBefore(date);
    };

    Duration.prototype.weeksBefore = function(date) {
      return this.simpleBefore(date);
    };

    Duration.prototype.monthsBefore = function(date) {
      var dateThen, monthNow;
      monthNow = date.getMonth();
      dateThen = new Date;
      dateThen.setMonth(monthNow - this.num);
      return dateThen;
    };

    Duration.prototype.yearsBefore = function(date) {
      var dateThen, yearNow;
      yearNow = date.getFullYear();
      dateThen = new Date;
      dateThen.setFullYear(yearNow - this.num);
      return dateThen;
    };

    Duration.prototype.fromNow = function() {
      return this["" + this.unit + "sAfter"](new Date);
    };

    Duration.prototype.after = function(date) {
      return this["" + this.unit + "sAfter"](date);
    };

    Duration.prototype.simpleAfter = function(date) {
      var ms;
      ms = date.getTime() + this.milliseconds();
      date = new Date;
      date.setTime(ms);
      return date;
    };

    Duration.prototype.minutesAfter = function(date) {
      return this.simpleAfter(date);
    };

    Duration.prototype.hoursAfter = function(date) {
      return this.simpleAfter(date);
    };

    Duration.prototype.daysAfter = function(date) {
      return this.simpleAfter(date);
    };

    Duration.prototype.weeksAfter = function(date) {
      return this.simpleAfter(date);
    };

    Duration.prototype.monthsAfter = function(date) {
      var dateThen, monthNow;
      monthNow = date.getMonth();
      dateThen = new Date;
      dateThen.setMonth(monthNow + this.num);
      return dateThen;
    };

    Duration.prototype.yearsAfter = function(date) {
      var dateThen, yearNow;
      yearNow = date.getFullYear();
      dateThen = new Date;
      dateThen.setFullYear(yearNow + this.num);
      return dateThen;
    };

    return Duration;

  })();

  Date.prototype.plus = function(duration) {
    if (duration.constructor.name !== "Duration") {
      return;
    }
    return duration.after(this);
  };

  Date.prototype.minus = function(duration) {
    if (duration.constructor.name !== "Duration") {
      return;
    }
    return duration.before(this);
  };

  Number.prototype.minute = Number.prototype.minutes = function() {
    return new Duration(this.valueOf(), "minute");
  };

  Number.prototype.hour = Number.prototype.hours = function() {
    return new Duration(this.valueOf(), "hour");
  };

  Number.prototype.day = Number.prototype.days = function() {
    return new Duration(this.valueOf(), "day");
  };

  Number.prototype.week = Number.prototype.weeks = function() {
    return new Duration(this.valueOf(), "week");
  };

  Number.prototype.month = Number.prototype.months = function() {
    return new Duration(this.valueOf(), "month");
  };

  Number.prototype.year = Number.prototype.years = function() {
    return new Duration(this.valueOf(), "year");
  };

}).call(this);
